name: Build PyInstaller Executables

on:
  push:
    branches: [ main ]
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  build:
    strategy:
      matrix:
        # Build for both Windows and macOS runners
        os: [windows-latest, macos-latest]
        # PINNING TO PYTHON 3.11 to match your local environment
        python-version: [3.11] 
    
    runs-on: ${{ matrix.os }}

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install dependencies
      # We explicitly install the dependency that causes issues to ensure compatibility.
      run: |
        python -m pip install --upgrade pip
        pip install pyinstaller pandas
        # Crucial fix: install swisseph first, then flatlib
        pip install swisseph==2.00.01
        pip install flatlib

    - name: Run PyInstaller
      # Creates the single-file executable in the 'dist' directory
      run: pyinstaller --onefile temp_calc.py
      
    - name: Rename and compress executable for Windows
      if: runner.os == 'Windows'
      # PowerShell commands for renaming and zipping the file
      run: |
        Rename-Item dist\temp_calc.exe temp_calc_windows.exe
        Compress-Archive -Path temp_calc_windows.exe -DestinationPath temp_calc_windows.zip
        
    - name: Rename and compress executable for macOS
      if: runner.os == 'macOS'
      # Bash commands for renaming and zipping the file
      run: |
        mv dist/temp_calc temp_calc_macos
        zip -r temp_calc_macos.zip temp_calc_macos
        
    - name: Upload Artifacts
      uses: actions/upload-artifact@v4
      with:
        name: standalone-executables
        path: |
          temp_calc_windows.zip
          temp_calc_macos.zip
